{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/hilmi/Documents/React JS/djikstra/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{maps}from\"./maps\";import{bubbleSort,mergeSort}from\"./mergesort\";import{mergeSort_variable}from\"./mergesort\";export function djiskstra(map,start,finish){console.log(\"djikstra is running\");if(start==finish){return[{\"route\":\"Same City\",\"distance\":0}];}else{var findingRoute=[];var foundRoute=[];var _iterator=_createForOfIteratorHelper(map),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _node=_step.value;if(_node.startCity===start){if(_node.finishCity===finish){var route=_node.startCity+\"-\"+_node.finishCity;foundRoute.push({\"route\":route,\"distance\":_node.distance});}else{findingRoute.push({\"route\":_node.startCity+\"-\"+_node.finishCity,\"distance\":_node.distance});}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}var index=0;while(findingRoute.length>0){// console.log(index)\nvar arrNewNode=[];index++;// console.log(\"iteration \"+index)\n// console.log(findingRoute)\nvar _iterator2=_createForOfIteratorHelper(findingRoute),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var node=_step2.value;var lastNode=\"\";for(var i=node.route.length;i>0;i--){if(node.route[i]===\"-\"){break;}if(node.route[i]!==undefined){lastNode+=node.route[i];}}lastNode=lastNode.split(\"\").reverse().join(\"\");var _iterator3=_createForOfIteratorHelper(map),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var nodeInMap=_step3.value;if(nodeInMap.startCity===lastNode){var explodedNode=node.route.split(\"-\");if(!explodedNode.includes(nodeInMap.finishCity)){var newNode=node.route+\"-\"+nodeInMap.finishCity;var newDistance=nodeInMap.distance+node.distance;if(nodeInMap.finishCity===finish){foundRoute.push({\"route\":newNode,\"distance\":newDistance});if(foundRoute.length>0){var distanceArrayFindingRoute=[];var _iterator4=_createForOfIteratorHelper(findingRoute),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var key=_step4.value;distanceArrayFindingRoute.push(key.distance);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}var distanceArrayFoundgRoute=[];var _iterator5=_createForOfIteratorHelper(foundRoute),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _key=_step5.value;distanceArrayFoundgRoute.push(_key.distance);}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}distanceArrayFindingRoute=distanceArrayFindingRoute.sort();distanceArrayFoundgRoute=distanceArrayFoundgRoute.sort();foundRoute=mergeSort(foundRoute);console.log(distanceArrayFindingRoute[0]+\"---\"+distanceArrayFoundgRoute[0]);if(distanceArrayFoundgRoute[0]<=distanceArrayFindingRoute[0]){return foundRoute;}}}else{arrNewNode.push({\"route\":newNode,\"distance\":newDistance});}}}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}findingRoute=arrNewNode;// console.log(index,findingRoute.length)\n}}}export function djikstra2(map,start,finish){// return map;\nvar v={\"y\":\"\",\"list_variable\":[]};var result=[];var l=[];var _iterator6=_createForOfIteratorHelper(map),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _variable=_step6.value;if(_variable.city_name==start){v.y={\"variable_name\":_variable.city_name,\"value\":0,\"route\":[_variable.city_name],\"neighbor_cities\":_variable.neighbor_cities};l.push(_variable.city_name);}else{v.list_variable.push({\"variable_name\":_variable.city_name,\"value\":91919191919,\"route\":[],\"neighbor_cities\":_variable.neighbor_cities});}}// var index = 1;\n}catch(err){_iterator6.e(err);}finally{_iterator6.f();}while(!l.includes(finish)){// for (let index = 0; index < 3; index++) {\n// console.log(\"iterasi \" +index  )\n// index++;\nvar _iterator7=_createForOfIteratorHelper(v.list_variable),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var variable=_step7.value;if(!l.includes(variable.variable_name)&&!v.y.route.includes(variable.variable_name)){var w=91919191919;var _iterator8=_createForOfIteratorHelper(v.y.neighbor_cities),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var city=_step8.value;if(city.city_name==variable.variable_name&&city.is_active==true){w=city.distance;break;}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}console.log(\"city = \"+v.y.variable_name+\"->\"+variable.variable_name+\" value : \"+variable.value);// variable.value = Math.min(variable.value,( v.y.value +  w))\nif(variable.value==91919191919&&w==91919191919){}else if(variable.value>=v.y.value+w){variable.value=v.y.value+w;variable.route=[];var _iterator9=_createForOfIteratorHelper(v.y.route),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var _node2=_step9.value;variable.route.push(_node2);}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}variable.route.push(variable.variable_name);if(variable.route[variable.route.length-1]==finish){var route=\"\";var _iterator10=_createForOfIteratorHelper(variable.route),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var node=_step10.value;route+=node+\"-\";}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}result.push({\"route\":route.slice(0,-1),\"distance\":variable.value});}}}}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}v.list_variable=bubbleSort(v.list_variable);v.y=v.list_variable[0];l.push(v.list_variable[0].variable_name);v.list_variable.shift();// console.log(v)\n}// return v;\nresult=result.reverse();return result;// return [result[0]];\n}","map":{"version":3,"names":["maps","bubbleSort","mergeSort","mergeSort_variable","djiskstra","map","start","finish","console","log","findingRoute","foundRoute","node","startCity","finishCity","route","push","distance","index","length","arrNewNode","lastNode","i","undefined","split","reverse","join","nodeInMap","explodedNode","includes","newNode","newDistance","distanceArrayFindingRoute","key","distanceArrayFoundgRoute","sort","djikstra2","v","result","l","variable","city_name","y","neighbor_cities","list_variable","variable_name","w","city","is_active","value","slice","shift"],"sources":["/Users/hilmi/Documents/React JS/djikstra/src/controller/djikstra.js"],"sourcesContent":["import { maps } from \"./maps\"\nimport {bubbleSort, mergeSort} from \"./mergesort\"\nimport {mergeSort_variable} from \"./mergesort\"\n\n\nexport function djiskstra(map,start,finish){\n  console.log(\"djikstra is running\")\n  if(start == finish){\n    return [{\"route\":\"Same City\",\"distance\":0}]\n  }\n  else{\n    \n    var findingRoute = []\n    var foundRoute = []\n\n    for (let node of map) {\n      if(node.startCity === start){\n        if(node.finishCity === finish ){\n          var route = node.startCity+\"-\"+node.finishCity\n          foundRoute.push({\n            \"route\" : route,\n            \"distance\" : node.distance\n          })\n        }\n        else{\n          findingRoute.push({\n            \"route\" : node.startCity+\"-\"+node.finishCity,\n            \"distance\" : node.distance\n          })\n        }\n      }\n    }\n\n    var index = 0\n    while ( findingRoute.length > 0 ) {\n      // console.log(index)\n      \n      var arrNewNode = []\n      index ++\n      // console.log(\"iteration \"+index)\n      // console.log(findingRoute)\n      for (let node of findingRoute) {\n        var lastNode = \"\";\n        for (let i = node.route.length  ; i > 0; i--) {\n          if(node.route[i] === \"-\"){\n            break\n          }\n          if(node.route[i] !== undefined){\n            lastNode += node.route[i]\n          }\n          \n        }\n        lastNode = lastNode.split(\"\").reverse().join(\"\")\n\n        for (let nodeInMap of map) {\n          if(nodeInMap.startCity === lastNode){\n            var explodedNode = node.route.split(\"-\")\n            if( !explodedNode.includes(nodeInMap.finishCity)  ){\n              var newNode = node.route+\"-\"+nodeInMap.finishCity\n              var newDistance = nodeInMap.distance+node.distance\n\n              if(nodeInMap.finishCity === finish){\n                foundRoute.push({\n                  \"route\" : newNode,\n                  \"distance\" : newDistance\n                })\n                if(foundRoute.length > 0){\n                  var distanceArrayFindingRoute = []\n                  for (let key of findingRoute) {\n                    distanceArrayFindingRoute.push(key.distance)\n                  }\n                  var distanceArrayFoundgRoute = []\n                  for (let key of foundRoute) {\n                    distanceArrayFoundgRoute.push(key.distance)\n                  }\n                  distanceArrayFindingRoute = distanceArrayFindingRoute.sort()\n                  distanceArrayFoundgRoute = distanceArrayFoundgRoute.sort()\n                  foundRoute = mergeSort(foundRoute)\n\n                  console.log(distanceArrayFindingRoute[0]+\"---\"+distanceArrayFoundgRoute[0])\n\n                  if(distanceArrayFoundgRoute[0] <= distanceArrayFindingRoute[0]){\n                    \n                    return foundRoute;\n                  }\n                }\n              }\n              else{\n                arrNewNode.push({\n                  \"route\" : newNode,\n                  \"distance\" : newDistance\n                })\n              }\n            }\n          }\n        }\n      }\n      findingRoute = arrNewNode\n      // console.log(index,findingRoute.length)\n    }\n  }\n}\n\n\n\nexport function djikstra2(map,start,finish){\n  // return map;\n  let v = {\n    \"y\" : \"\",\n    \"list_variable\" : []\n  };\n  \n  let result = [];\n  let l = [];\n  for (let variable of map) {\n    if(variable.city_name == start){\n      v.y = {\n        \"variable_name\" : variable.city_name,\n        \"value\" : 0,\n        \"route\" : [variable.city_name],\n        \"neighbor_cities\": variable.neighbor_cities\n      }\n      l.push(\n        variable.city_name\n      )\n    }\n    else{\n      v.list_variable.push(\n        {\n          \"variable_name\" : variable.city_name,\n          \"value\" : 91919191919,\n          \"route\" : [],\n          \"neighbor_cities\": variable.neighbor_cities\n        }\n      )\n    }\n    \n    \n  }\n\n  // var index = 1;\n  while(!l.includes(finish)) {\n  // for (let index = 0; index < 3; index++) {\n    // console.log(\"iterasi \" +index  )\n    // index++;\n    for (let variable of v.list_variable) {\n      if( !l.includes(variable.variable_name) && !v.y.route.includes(variable.variable_name)){\n        let w = 91919191919;\n        for(let city of v.y.neighbor_cities){\n          if(city.city_name == variable.variable_name && city.is_active == true){\n            w = city.distance;\n            break;\n          }\n        }\n\n        \n        console.log(\"city = \"+v.y.variable_name+\"->\"+variable.variable_name+\" value : \"+(variable.value))\n\n        // variable.value = Math.min(variable.value,( v.y.value +  w))\n        if( variable.value == 91919191919 && w == 91919191919){\n          \n        }\n        else if(variable.value >=  ( v.y.value +  w)){\n          variable.value = ( v.y.value +  w)\n          variable.route = []\n          for (let node of v.y.route) {\n            variable.route.push(node)\n          }\n          variable.route.push(variable.variable_name)\n          if(variable.route[variable.route.length -1 ]  == finish){\n            let route = \"\";\n            for (let node of variable.route) {\n              route += node+\"-\";\n            }\n            result.push({\n              \"route\" : route.slice(0,-1),\n              \"distance\" : variable.value\n            });\n          \n          }\n          \n        }\n        \n\n        \n      }\n    }\n    v.list_variable = bubbleSort(v.list_variable)\n\n    v.y = v.list_variable[0]\n    l.push(v.list_variable[0].variable_name)\n    v.list_variable.shift()\n    // console.log(v)\n\n    \n  }\n\n  // return v;\n  result = result.reverse()\n  return result;\n  // return [result[0]];\n\n  \n}"],"mappings":"sJAAA,OAASA,IAAT,KAAqB,QAArB,CACA,OAAQC,UAAR,CAAoBC,SAApB,KAAoC,aAApC,CACA,OAAQC,kBAAR,KAAiC,aAAjC,CAGA,MAAO,SAASC,UAAT,CAAmBC,GAAnB,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoC,CACzCC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,GAAGH,KAAK,EAAIC,MAAZ,CAAmB,CACjB,MAAO,CAAC,CAAC,QAAQ,WAAT,CAAqB,WAAW,CAAhC,CAAD,CAAP,CACD,CAFD,IAGI,CAEF,GAAIG,aAAY,CAAG,EAAnB,CACA,GAAIC,WAAU,CAAG,EAAjB,CAHE,yCAKeN,GALf,YAKF,+CAAsB,IAAbO,MAAa,aACpB,GAAGA,KAAI,CAACC,SAAL,GAAmBP,KAAtB,CAA4B,CAC1B,GAAGM,KAAI,CAACE,UAAL,GAAoBP,MAAvB,CAA+B,CAC7B,GAAIQ,MAAK,CAAGH,KAAI,CAACC,SAAL,CAAe,GAAf,CAAmBD,KAAI,CAACE,UAApC,CACAH,UAAU,CAACK,IAAX,CAAgB,CACd,QAAUD,KADI,CAEd,WAAaH,KAAI,CAACK,QAFJ,CAAhB,EAID,CAND,IAOI,CACFP,YAAY,CAACM,IAAb,CAAkB,CAChB,QAAUJ,KAAI,CAACC,SAAL,CAAe,GAAf,CAAmBD,KAAI,CAACE,UADlB,CAEhB,WAAaF,KAAI,CAACK,QAFF,CAAlB,EAID,CACF,CACF,CArBC,qDAuBF,GAAIC,MAAK,CAAG,CAAZ,CACA,MAAQR,YAAY,CAACS,MAAb,CAAsB,CAA9B,CAAkC,CAChC;AAEA,GAAIC,WAAU,CAAG,EAAjB,CACAF,KAAK,GACL;AACA;AANgC,0CAOfR,YAPe,aAOhC,kDAA+B,IAAtBE,KAAsB,cAC7B,GAAIS,SAAQ,CAAG,EAAf,CACA,IAAK,GAAIC,EAAC,CAAGV,IAAI,CAACG,KAAL,CAAWI,MAAxB,CAAkCG,CAAC,CAAG,CAAtC,CAAyCA,CAAC,EAA1C,CAA8C,CAC5C,GAAGV,IAAI,CAACG,KAAL,CAAWO,CAAX,IAAkB,GAArB,CAAyB,CACvB,MACD,CACD,GAAGV,IAAI,CAACG,KAAL,CAAWO,CAAX,IAAkBC,SAArB,CAA+B,CAC7BF,QAAQ,EAAIT,IAAI,CAACG,KAAL,CAAWO,CAAX,CAAZ,CACD,CAEF,CACDD,QAAQ,CAAGA,QAAQ,CAACG,KAAT,CAAe,EAAf,EAAmBC,OAAnB,GAA6BC,IAA7B,CAAkC,EAAlC,CAAX,CAX6B,0CAaPrB,GAbO,aAa7B,kDAA2B,IAAlBsB,UAAkB,cACzB,GAAGA,SAAS,CAACd,SAAV,GAAwBQ,QAA3B,CAAoC,CAClC,GAAIO,aAAY,CAAGhB,IAAI,CAACG,KAAL,CAAWS,KAAX,CAAiB,GAAjB,CAAnB,CACA,GAAI,CAACI,YAAY,CAACC,QAAb,CAAsBF,SAAS,CAACb,UAAhC,CAAL,CAAmD,CACjD,GAAIgB,QAAO,CAAGlB,IAAI,CAACG,KAAL,CAAW,GAAX,CAAeY,SAAS,CAACb,UAAvC,CACA,GAAIiB,YAAW,CAAGJ,SAAS,CAACV,QAAV,CAAmBL,IAAI,CAACK,QAA1C,CAEA,GAAGU,SAAS,CAACb,UAAV,GAAyBP,MAA5B,CAAmC,CACjCI,UAAU,CAACK,IAAX,CAAgB,CACd,QAAUc,OADI,CAEd,WAAaC,WAFC,CAAhB,EAIA,GAAGpB,UAAU,CAACQ,MAAX,CAAoB,CAAvB,CAAyB,CACvB,GAAIa,0BAAyB,CAAG,EAAhC,CADuB,0CAEPtB,YAFO,aAEvB,kDAA8B,IAArBuB,IAAqB,cAC5BD,yBAAyB,CAAChB,IAA1B,CAA+BiB,GAAG,CAAChB,QAAnC,EACD,CAJsB,uDAKvB,GAAIiB,yBAAwB,CAAG,EAA/B,CALuB,0CAMPvB,UANO,aAMvB,kDAA4B,IAAnBsB,KAAmB,cAC1BC,wBAAwB,CAAClB,IAAzB,CAA8BiB,IAAG,CAAChB,QAAlC,EACD,CARsB,uDASvBe,yBAAyB,CAAGA,yBAAyB,CAACG,IAA1B,EAA5B,CACAD,wBAAwB,CAAGA,wBAAwB,CAACC,IAAzB,EAA3B,CACAxB,UAAU,CAAGT,SAAS,CAACS,UAAD,CAAtB,CAEAH,OAAO,CAACC,GAAR,CAAYuB,yBAAyB,CAAC,CAAD,CAAzB,CAA6B,KAA7B,CAAmCE,wBAAwB,CAAC,CAAD,CAAvE,EAEA,GAAGA,wBAAwB,CAAC,CAAD,CAAxB,EAA+BF,yBAAyB,CAAC,CAAD,CAA3D,CAA+D,CAE7D,MAAOrB,WAAP,CACD,CACF,CACF,CAzBD,IA0BI,CACFS,UAAU,CAACJ,IAAX,CAAgB,CACd,QAAUc,OADI,CAEd,WAAaC,WAFC,CAAhB,EAID,CACF,CACF,CACF,CAtD4B,uDAuD9B,CA9D+B,uDA+DhCrB,YAAY,CAAGU,UAAf,CACA;AACD,CACF,CACF,CAID,MAAO,SAASgB,UAAT,CAAmB/B,GAAnB,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoC,CACzC;AACA,GAAI8B,EAAC,CAAG,CACN,IAAM,EADA,CAEN,gBAAkB,EAFZ,CAAR,CAKA,GAAIC,OAAM,CAAG,EAAb,CACA,GAAIC,EAAC,CAAG,EAAR,CARyC,0CASpBlC,GAToB,aASzC,kDAA0B,IAAjBmC,UAAiB,cACxB,GAAGA,SAAQ,CAACC,SAAT,EAAsBnC,KAAzB,CAA+B,CAC7B+B,CAAC,CAACK,CAAF,CAAM,CACJ,gBAAkBF,SAAQ,CAACC,SADvB,CAEJ,QAAU,CAFN,CAGJ,QAAU,CAACD,SAAQ,CAACC,SAAV,CAHN,CAIJ,kBAAmBD,SAAQ,CAACG,eAJxB,CAAN,CAMAJ,CAAC,CAACvB,IAAF,CACEwB,SAAQ,CAACC,SADX,EAGD,CAVD,IAWI,CACFJ,CAAC,CAACO,aAAF,CAAgB5B,IAAhB,CACE,CACE,gBAAkBwB,SAAQ,CAACC,SAD7B,CAEE,QAAU,WAFZ,CAGE,QAAU,EAHZ,CAIE,kBAAmBD,SAAQ,CAACG,eAJ9B,CADF,EAQD,CAGF,CAED;AAnCyC,uDAoCzC,MAAM,CAACJ,CAAC,CAACV,QAAF,CAAWtB,MAAX,CAAP,CAA2B,CAC3B;AACE;AACA;AAHyB,0CAIJ8B,CAAC,CAACO,aAJE,aAIzB,kDAAsC,IAA7BJ,SAA6B,cACpC,GAAI,CAACD,CAAC,CAACV,QAAF,CAAWW,QAAQ,CAACK,aAApB,CAAD,EAAuC,CAACR,CAAC,CAACK,CAAF,CAAI3B,KAAJ,CAAUc,QAAV,CAAmBW,QAAQ,CAACK,aAA5B,CAA5C,CAAuF,CACrF,GAAIC,EAAC,CAAG,WAAR,CADqF,0CAErET,CAAC,CAACK,CAAF,CAAIC,eAFiE,aAErF,kDAAoC,IAA5BI,KAA4B,cAClC,GAAGA,IAAI,CAACN,SAAL,EAAkBD,QAAQ,CAACK,aAA3B,EAA4CE,IAAI,CAACC,SAAL,EAAkB,IAAjE,CAAsE,CACpEF,CAAC,CAAGC,IAAI,CAAC9B,QAAT,CACA,MACD,CACF,CAPoF,uDAUrFT,OAAO,CAACC,GAAR,CAAY,UAAU4B,CAAC,CAACK,CAAF,CAAIG,aAAd,CAA4B,IAA5B,CAAiCL,QAAQ,CAACK,aAA1C,CAAwD,WAAxD,CAAqEL,QAAQ,CAACS,KAA1F,EAEA;AACA,GAAIT,QAAQ,CAACS,KAAT,EAAkB,WAAlB,EAAiCH,CAAC,EAAI,WAA1C,CAAsD,CAErD,CAFD,IAGK,IAAGN,QAAQ,CAACS,KAAT,EAAqBZ,CAAC,CAACK,CAAF,CAAIO,KAAJ,CAAaH,CAArC,CAAwC,CAC3CN,QAAQ,CAACS,KAAT,CAAmBZ,CAAC,CAACK,CAAF,CAAIO,KAAJ,CAAaH,CAAhC,CACAN,QAAQ,CAACzB,KAAT,CAAiB,EAAjB,CAF2C,0CAG1BsB,CAAC,CAACK,CAAF,CAAI3B,KAHsB,aAG3C,kDAA4B,IAAnBH,OAAmB,cAC1B4B,QAAQ,CAACzB,KAAT,CAAeC,IAAf,CAAoBJ,MAApB,EACD,CAL0C,uDAM3C4B,QAAQ,CAACzB,KAAT,CAAeC,IAAf,CAAoBwB,QAAQ,CAACK,aAA7B,EACA,GAAGL,QAAQ,CAACzB,KAAT,CAAeyB,QAAQ,CAACzB,KAAT,CAAeI,MAAf,CAAuB,CAAtC,GAA8CZ,MAAjD,CAAwD,CACtD,GAAIQ,MAAK,CAAG,EAAZ,CADsD,2CAErCyB,QAAQ,CAACzB,KAF4B,cAEtD,qDAAiC,IAAxBH,KAAwB,eAC/BG,KAAK,EAAIH,IAAI,CAAC,GAAd,CACD,CAJqD,yDAKtD0B,MAAM,CAACtB,IAAP,CAAY,CACV,QAAUD,KAAK,CAACmC,KAAN,CAAY,CAAZ,CAAc,CAAC,CAAf,CADA,CAEV,WAAaV,QAAQ,CAACS,KAFZ,CAAZ,EAKD,CAEF,CAIF,CACF,CA7CwB,uDA8CzBZ,CAAC,CAACO,aAAF,CAAkB3C,UAAU,CAACoC,CAAC,CAACO,aAAH,CAA5B,CAEAP,CAAC,CAACK,CAAF,CAAML,CAAC,CAACO,aAAF,CAAgB,CAAhB,CAAN,CACAL,CAAC,CAACvB,IAAF,CAAOqB,CAAC,CAACO,aAAF,CAAgB,CAAhB,EAAmBC,aAA1B,EACAR,CAAC,CAACO,aAAF,CAAgBO,KAAhB,GACA;AAGD,CAED;AACAb,MAAM,CAAGA,MAAM,CAACb,OAAP,EAAT,CACA,MAAOa,OAAP,CACA;AAGD"},"metadata":{},"sourceType":"module"}