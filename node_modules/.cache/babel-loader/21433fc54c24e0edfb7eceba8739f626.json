{"ast":null,"code":"export function merge(left, right) {\n  let arr = [];\n\n  while (left.length && right.length) {\n    // if (left[0]['distance'] < right[0]['distance']) {\n    if (left < right) {\n      arr.push(left.shift());\n    } else {\n      arr.push(right.shift());\n    }\n  }\n\n  return [...arr, ...left, ...right];\n}\nexport function mergeSort(array) {\n  const half = array.length / 2;\n\n  if (array.length < 2) {\n    return array;\n  }\n\n  const left = array.splice(0, half);\n  return merge(mergeSort(left), mergeSort(array));\n}\nexport function merge_variable(left, right) {\n  let arr = [];\n\n  while (left.length && right.length) {\n    if (left.value < right.value) {\n      // if (left < right) {\n      arr.push(left.shift());\n    } else {\n      arr.push(right.shift());\n    }\n  }\n\n  return [...arr, ...left, ...right];\n}\nexport function mergeSort_variable(array) {\n  const half = array.length / 2;\n\n  if (array.length < 2) {\n    return array;\n  }\n\n  const left = array.splice(0, half);\n  return merge_variable(mergeSort_variable(left), mergeSort_variable(array));\n}\nexport function bubbleSort(arr) {\n  var i, j;\n  var len = arr.length;\n  var isSwapped = false;\n\n  for (i = 0; i < len; i++) {\n    isSwapped = false;\n\n    for (j = 0; j < len; j++) {\n      if (arr[j].value > arr[j + 1], value) {\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        isSwapped = true;\n      }\n    } // IF no two elements were swapped by inner loop, then break\n\n\n    if (!isSwapped) {\n      break;\n    }\n  } // Print the array\n\n\n  return arr;\n}","map":{"version":3,"names":["merge","left","right","arr","length","push","shift","mergeSort","array","half","splice","merge_variable","value","mergeSort_variable","bubbleSort","i","j","len","isSwapped","temp"],"sources":["/Users/hilmi/Documents/React JS/djikstra/src/controller/mergesort.js"],"sourcesContent":["export function merge(left, right) {\n  let arr = []\n  while (left.length && right.length) {\n      // if (left[0]['distance'] < right[0]['distance']) {\n      if (left < right) {\n          arr.push(left.shift())  \n      } else {\n          arr.push(right.shift()) \n      }\n  }\n  \n  return [ ...arr, ...left, ...right ]\n}\n\nexport function mergeSort(array) {\n  const half = array.length / 2\n  if(array.length < 2){\n    return array \n  }\n  \n  const left = array.splice(0, half)\n  return merge(mergeSort(left),mergeSort(array))\n}\n\nexport function merge_variable(left, right) {\n  let arr = []\n  while (left.length && right.length) {\n      if (left.value < right.value) {\n      // if (left < right) {\n          arr.push(left.shift())  \n      } else {\n          arr.push(right.shift()) \n      }\n  }\n  \n  return [ ...arr, ...left, ...right ]\n}\n\nexport function mergeSort_variable(array) {\n  const half = array.length / 2\n  if(array.length < 2){\n    return array \n  }\n  \n  const left = array.splice(0, half)\n  return merge_variable(mergeSort_variable(left),mergeSort_variable(array))\n}\n\n\nexport function bubbleSort(arr){\n   \n  var i, j;\n  var len = arr.length;\n   \n  var isSwapped = false;\n   \n  for(i =0; i < len; i++){\n     \n    isSwapped = false;\n     \n    for(j = 0; j < len; j++){\n        if(arr[j].value > arr[j + 1],value){\n          var temp = arr[j]\n          arr[j] = arr[j+1];\n          arr[j+1] = temp;\n          isSwapped = true;\n        }\n    }\n     \n    // IF no two elements were swapped by inner loop, then break\n     \n    if(!isSwapped){\n      break;\n    }\n  }\n   \n  // Print the array\n  return (arr)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}