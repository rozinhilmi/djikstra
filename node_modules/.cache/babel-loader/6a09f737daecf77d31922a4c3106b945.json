{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/hilmi/Documents/React JS/djikstra/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/hilmi/Documents/React JS/djikstra/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../css/Home.css\";import{djikstra}from\"../controller/djikstra\";import{maps}from\"../notes\";import{Loading}from\"../components/loading\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),listCity=_useState2[0],setListCity=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];useEffect(function(){setTimeout(function(){var newListCity=[];var _iterator=_createForOfIteratorHelper(maps),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var city=_step.value;newListCity.push(city.city_name);}// console.log(listCity);\n}catch(err){_iterator.e(err);}finally{_iterator.f();}newListCity.sort();setListCity(listCity=newListCity);setIsLoading(isLoading=false);},1000);},[]);function googleMaps(route){var output=\"\";var _iterator2=_createForOfIteratorHelper(route),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var char=_step2.value;if(char===\"-\"){output+=\"/\";}else{output+=char;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}window.open(\"https://www.google.co.id/maps/dir/\".concat(output));}var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),result=_useState6[0],setResult=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"home\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"svg\",{class:\"waves\",xmlns:\"http://www.w3.org/2000/svg\",xmlnsXlink:\"http://www.w3.org/1999/xlink\",viewBox:\"0 24 150 28\",preserveAspectRatio:\"none\",\"shape-rendering\":\"auto\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"path\",{id:\"gentle-wave\",d:\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"})}),/*#__PURE__*/_jsxs(\"g\",{class:\"parallax\",children:[/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"#gentle-wave\",x:\"48\",y:\"0\",fill:\"rgba(255,255,255,0.7\"}),/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"#gentle-wave\",x:\"48\",y:\"3\",fill:\"rgba(255,255,255,0.5)\"}),/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"#gentle-wave\",x:\"48\",y:\"5\",fill:\"rgba(255,255,255,0.3)\"}),/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"#gentle-wave\",x:\"48\",y:\"7\",fill:\"#fff\"})]})]})}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Djiskstra Algorithm\"})}),isLoading==true?Loading():null,/*#__PURE__*/_jsxs(\"div\",{className:\"box-form\",style:isLoading==true?{display:\"none\"}:null,children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Your Location\"}),/*#__PURE__*/_jsx(\"select\",{name:\"start-city-input\",className:\"form-select\",\"aria-label\":\"Default select example\",children:listCity.map(function(city){return/*#__PURE__*/_jsx(\"option\",{value:city,children:city},\"\".concat(city,\"-\").concat(city));})})]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Destination\"}),/*#__PURE__*/_jsx(\"select\",{name:\"finish-city-input\",className:\"form-select\",\"aria-label\":\"Default select example\",children:listCity.map(function(city){return/*#__PURE__*/_jsx(\"option\",{value:city,children:city},\"\".concat(city,\"-\").concat(city));})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:function onClick(){setIsLoading(isLoading=true);var startCityInput=document.getElementsByName('start-city-input')[0].value;var finishCityInput=document.getElementsByName('finish-city-input')[0].value;setTimeout(function(){setResult(result=djikstra(maps,startCityInput,finishCityInput));setIsLoading(isLoading=false);console.log(\"result\");console.log(result);},1000);}// window.location.href = `https://www.google.co.id/maps/dir/${document.getElementsByName('start-city-input')[0].value}/${document.getElementsByName('finish-city-input')[0].value}`\n,children:\"Get shortest route\"}),result.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table\",style:{backgroundColor:\"rgb(255, 192, 203)\",borderColor:\"rgb(255, 75, 105)\"},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Route\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Distance\"}),/*#__PURE__*/_jsx(\"td\",{})]})}),result.map(function(node){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"tbody\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"\",children:[/*#__PURE__*/_jsx(\"td\",{children:node.route}),/*#__PURE__*/_jsxs(\"td\",{children:[node.distance.toFixed(2),\" Km\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){googleMaps(node.route);},className:\"btn btn-outline-danger\",children:\"Detail Route\"})})]},node.route)})});})]}):null]})]});}","map":{"version":3,"names":["djikstra","maps","Loading","useEffect","useState","Home","listCity","setListCity","isLoading","setIsLoading","setTimeout","newListCity","city","push","city_name","sort","googleMaps","route","output","char","window","open","result","setResult","display","map","startCityInput","document","getElementsByName","value","finishCityInput","console","log","length","backgroundColor","borderColor","node","distance","toFixed"],"sources":["/Users/hilmi/Documents/React JS/djikstra/src/pages/Home.js"],"sourcesContent":["\nimport \"../css/Home.css\"\nimport { djikstra } from \"../controller/djikstra\"\nimport { maps } from \"../notes\"\nimport { Loading } from \"../components/loading\"\nimport { useEffect, useState } from \"react\";\n\nexport function Home(){\n  var [listCity,setListCity] = useState([])\n  var [isLoading, setIsLoading] = useState(true);\n  useEffect(function(){\n    setTimeout(function(){\n      var newListCity = []\n      for (let city of maps) {\n        newListCity.push(city.city_name)\n      }\n      // console.log(listCity);\n      newListCity.sort();\n      setListCity(listCity = newListCity)\n      setIsLoading(isLoading = false)\n    },1000)\n    \n  },[])\n\n  function googleMaps(route){\n    var output = \"\"\n    for (let char of route) {\n     if(char === \"-\"){\n      output += \"/\"\n     }  \n     else{\n      output += char\n     }\n    }\n    window.open(`https://www.google.co.id/maps/dir/${output}`)\n  }\n  var [result,setResult] = useState([])\n\n  return (\n    <div className=\"home\">\n      <div>\n        <svg class=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\n          <defs>\n            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n          </defs>\n          <g class=\"parallax\">\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n      <nav>\n        <h5>Djiskstra Algorithm</h5>\n      </nav>\n          {(isLoading == true)? Loading():null}\n          <div className=\"box-form\" style= { (isLoading==true) ? { display:\"none\" } : null }  >\n            <span>\n              <p>Your Location</p>\n              <select name=\"start-city-input\" className=\"form-select\" aria-label=\"Default select example\">\n                {\n                  listCity.map(function(city){\n                    return (<option value={city} key={`${city}-${city}`}>{city}</option>)\n                  })\n                }\n              </select>\n            </span>\n            <span>\n              <p>Destination</p>\n              <select name=\"finish-city-input\" className=\"form-select\" aria-label=\"Default select example\">\n                {\n                  \n                  listCity.map(function(city){\n                    return (<option value={city} key={`${city}-${city}`}>{city}</option>)\n                  })\n                }\n              </select>\n            </span>\n\n            <button className=\"btn\" onClick={ function(){\n                setIsLoading(isLoading = true)\n                var startCityInput = document.getElementsByName('start-city-input')[0].value\n                var finishCityInput = document.getElementsByName('finish-city-input')[0].value\n                \n                setTimeout(function(){\n                  setResult(result = djikstra(\n                    maps,\n                    startCityInput,\n                    finishCityInput\n                    )\n                  ) \n                  setIsLoading(isLoading = false )\n                  console.log(\"result\")\n                  console.log(result);\n                },1000)\n                \n                \n                \n              }\n              // window.location.href = `https://www.google.co.id/maps/dir/${document.getElementsByName('start-city-input')[0].value}/${document.getElementsByName('finish-city-input')[0].value}`\n              } >Get shortest route\n            </button>\n\n\n              {\n                (result.length > 0)?\n                  <table className=\"table\">\n                    <thead className=\"table\" style={{ backgroundColor: \"rgb(255, 192, 203)\",borderColor: \"rgb(255, 75, 105)\" }}>\n                      <tr>\n                        <td>Route</td>\n                        <td>Distance</td>\n                        <td></td>\n                      </tr>\n                    </thead>\n                    {result.map(function(node)\n                    {\n                        return (\n                          <>\n                            \n                            <tbody className=\"\">\n                              <tr className=\"\" key={node.route}>\n                                <td>{node.route}</td>\n                                <td>{node.distance.toFixed(2)} Km</td>\n                                <td><button onClick={function(){googleMaps(node.route)}} className=\"btn btn-outline-danger\">Detail Route</button></td>\n                              </tr>\n                            </tbody>\n                          </>\n                        )\n                    })\n                    }\n                  </table>\n                : null\n              }\n          </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}